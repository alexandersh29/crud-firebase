{"ast":null,"code":"import { firebaseApp } from './firebase';\nimport 'firebase/firestore';\nconst db = firebaseApp.firestore(firebaseApp);\nexport const getCollection = async collection => {\n  const result = {\n    statusResponse: false,\n    data: null,\n    error: null\n  };\n\n  try {\n    const data = await db.collection(collection).get();\n    const arrayData = data.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    console.log(arrayData);\n    result.statusResponse = true;\n    result.data = arrayData;\n  } catch (error) {\n    result.error = error;\n  }\n\n  return result;\n};\nexport const addDocument = async (collection, data) => {\n  const result = {\n    statusResponse: false,\n    data: null,\n    error: null\n  };\n\n  try {\n    const response = await db.collection(collection).add(data);\n    result.data = {\n      id: response.id\n    };\n    result.statusResponse = true;\n  } catch (error) {\n    result.error = error;\n  }\n\n  return result;\n};\nexport const getDocument = async (collection, id) => {\n  const result = {\n    statusResponse: false,\n    data: null,\n    error: null\n  };\n\n  try {\n    const response = await db.collection(collection).doc(id).get();\n    result.data = {\n      id: response.id,\n      ...response.data()\n    };\n    result.statusResponse = true;\n  } catch (error) {\n    result.error = error;\n  }\n\n  return result;\n};\nexport const updateDocument = async (collection, id, data) => {\n  const result = {\n    statusResponse: false,\n    error: null\n  };\n\n  try {\n    result.statusResponse = true;\n  } catch (error) {\n    result.error = error;\n  }\n\n  return result;\n};\nexport const deleteDocument = async (collection, id) => {\n  const result = {\n    statusResponse: false,\n    error: null\n  };\n\n  try {\n    await db.collection(collection).doc(id).delete();\n    result.statusResponse = true;\n  } catch (error) {\n    result.error = error;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/alexa/Documents/ING 2/9/Paulina/Tercer PARCIAL/4to Ejercicio/crudreact/src/actions.js"],"names":["firebaseApp","db","firestore","getCollection","collection","result","statusResponse","data","error","get","arrayData","docs","map","doc","id","console","log","addDocument","response","add","getDocument","updateDocument","deleteDocument","delete"],"mappings":"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","sourcesContent":["import {firebaseApp} from './firebase'\r\n\r\nimport 'firebase/firestore'\r\n\r\n\r\nconst db=firebaseApp.firestore(firebaseApp)\r\n\r\nexport const getCollection= async(collection) =>{\r\n const result ={statusResponse:false, data:null, error:null }\r\ntry{\r\n const data=await db.collection(collection).get()\r\n const arrayData= data.docs.map(doc=>({ id:doc.id, ...doc.data()}))\r\n console.log(arrayData)\r\n result.statusResponse=true\r\n result.data=arrayData\r\n\r\n} catch(error){\r\n result.error=error\r\n}\r\nreturn result\r\n}\r\n\r\nexport const addDocument= async (collection, data)=>{\r\n const result={statusResponse:false, data:null, error:null}\r\n try{\r\n  const response=await db.collection(collection).add(data)\r\n  result.data={id:response.id}\r\n  result.statusResponse=true\r\n }catch(error){\r\n  result.error=error\r\n }\r\n return result\r\n}\r\n\r\n\r\nexport const getDocument=async(collection, id)=>{\r\n const result={statusResponse:false, data:null, error:null}\r\n\r\n try{\r\n  const response=await db.collection(collection).doc(id).get()\r\n  result.data={id:response.id, ...response.data()}\r\n  result.statusResponse=true\r\n }catch(error){\r\n  result.error=error\r\n }\r\n return result\r\n\r\n}\r\n\r\n\r\nexport const updateDocument=async(collection, id, data)=>{\r\n const result={statusResponse:false, error:null}\r\n\r\n try{\r\n  \r\n  result.statusResponse=true\r\n  \r\n }catch(error){\r\n  result.error=error\r\n }\r\n return result\r\n\r\n}\r\n\r\n\r\nexport const deleteDocument=async(collection, id)=>{\r\n const result={statusResponse:false, error:null}\r\n\r\n try{\r\n  await db.collection(collection).doc(id).delete()\r\n  result.statusResponse=true\r\n  \r\n }catch(error){\r\n  result.error=error\r\n }\r\n return result\r\n\r\n}"]},"metadata":{},"sourceType":"module"}